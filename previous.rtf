{\rtf1\ansi\ansicpg1252\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red157\green0\blue210;\red255\green255\blue255;\red45\green45\blue45;
\red0\green0\blue255;\red0\green0\blue109;\red144\green1\blue18;\red11\green90\blue180;\red0\green0\blue0;
\red101\green76\blue29;\red19\green118\blue70;\red15\green112\blue1;}
{\*\expandedcolortbl;;\cssrgb\c68627\c0\c85882;\cssrgb\c100000\c100000\c100000;\cssrgb\c23137\c23137\c23137;
\cssrgb\c0\c0\c100000;\cssrgb\c0\c6275\c50196;\cssrgb\c63922\c8235\c8235;\cssrgb\c0\c43922\c75686;\cssrgb\c0\c0\c0;
\cssrgb\c47451\c36863\c14902;\cssrgb\c3529\c52549\c34510;\cssrgb\c0\c50196\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 *\cf4 \strokec4  \cf2 \strokec2 as\cf4 \strokec4  \cf6 \strokec6 d3\cf4 \strokec4  \cf2 \strokec2 from\cf4 \strokec4  \cf7 \strokec7 "d3"\cf4 \strokec4 ;\cb1 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \{ \cf6 \strokec6 triTable\cf4 \strokec4  \} \cf2 \strokec2 from\cf4 \strokec4  \cf7 \strokec7 "three/examples/jsm/objects/MarchingCubes.js"\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 initialTime\cf4 \strokec4  \strokec9 =\strokec4  \cf6 \strokec6 Date\cf4 \strokec4 .\cf10 \strokec10 now\cf4 \strokec4 ();\cb1 \
\
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 body\cf4 \strokec4  \strokec9 =\strokec4  \cf6 \strokec6 d3\cf4 \strokec4 .\cf10 \strokec10 select\cf4 \strokec4 (\cf7 \strokec7 'body'\cf4 \strokec4 );\cb1 \
\
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 clock\cf4 \strokec4  \strokec9 =\strokec4  \cf6 \strokec6 body\cf4 \strokec4 .\cf10 \strokec10 append\cf4 \strokec4 (\cf7 \strokec7 'div'\cf4 \strokec4 ).\cf10 \strokec10 attr\cf4 \strokec4 (\cf7 \strokec7 'id'\cf4 \strokec4 , \cf7 \strokec7 'clock'\cf4 \strokec4 );\cb1 \
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 timestamp\cf4 \strokec4  \strokec9 =\strokec4  \cf6 \strokec6 clock\cf4 \strokec4 .\cf10 \strokec10 append\cf4 \strokec4 (\cf7 \strokec7 'div'\cf4 \strokec4 ).\cf10 \strokec10 attr\cf4 \strokec4 (\cf7 \strokec7 'id'\cf4 \strokec4 , \cf7 \strokec7 'timestamp'\cf4 \strokec4 );\cb1 \
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 svg\cf4 \strokec9 =\strokec4  \cf6 \strokec6 clock\cf4 \strokec4 .\cf10 \strokec10 append\cf4 \strokec4 (\cf7 \strokec7 'svg'\cf4 \strokec4 )\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .\cf10 \strokec10 attr\cf4 \strokec4 (\cf7 \strokec7 'viewBox'\cf4 \strokec4 , \cf7 \strokec7 '0 0 1920 1080'\cf4 \strokec4 )\cb1 \
\cb3 .\cf10 \strokec10 attr\cf4 \strokec4 (\cf7 \strokec7 'width'\cf4 \strokec4 , \cf11 \strokec11 1920\cf4 \strokec4 )\cb1 \
\cb3 .\cf10 \strokec10 attr\cf4 \strokec4 (\cf7 \strokec7 'height'\cf4 \strokec4 , \cf11 \strokec11 1080\cf4 \strokec4 );\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 octpoints1\cf4 \strokec4  \strokec9 =\strokec4  [];\cb1 \
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 octpoints2\cf4 \strokec4  \strokec9 =\strokec4  [];\cb1 \
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 octpoints3\cf4 \strokec4  \strokec9 =\strokec4  [];\cb1 \
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 hourpoints\cf4 \strokec4  \strokec9 =\strokec4  [];\cb1 \
\cf5 \cb3 \strokec5 var\cf4 \strokec4  \cf6 \strokec6 radius\cf4 \strokec9 =\cf11 \strokec11 100\cf4 \strokec4 , \cf6 \strokec6 cx\cf4 \strokec9 =\cf11 \strokec11 960\cf4 \strokec4 , \cf6 \strokec6 cy\cf4 \strokec9 =\cf11 \strokec11 540\cf4 \strokec4 ;\cb1 \
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 triangleCenter\cf4 \strokec4  \strokec9 =\strokec4  [\cf6 \strokec6 cx\cf4 \strokec4 , \cf6 \strokec6 cy\cf4 \strokec4 ];\cb1 \
\cf5 \cb3 \strokec5 var\cf4 \strokec4  \cf6 \strokec6 zone1hour\cf4 \strokec4 , \cf6 \strokec6 zone2hour\cf4 \strokec4 , \cf6 \strokec6 zone3hour\cf4 \strokec4 ;\cb1 \
\
\
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 zones\cf4 \strokec4 (\cf6 \strokec6 hours\cf4 \strokec4 )\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 \{\cb1 \
\cb3     \cf2 \strokec2 switch\cf4 \strokec4  (\cf10 \strokec10 floor\cf4 \strokec4 (\cf6 \strokec6 hours\cf4 \strokec9 /\cf11 \strokec11 3\cf4 \strokec4 ))\cb1 \
\cb3     \{\cb1 \
\cb3         \cf2 \strokec2 case\cf4 \strokec4  \cf11 \strokec11 1\cf4 \strokec4 :\cb1 \
\cb3             \{\cb1 \
\cb3              \cf6 \strokec6 zone1hour\cf4 \strokec9 =\cf6 \strokec6 hours\cf4 \strokec9 %\cf11 \strokec11 8\cf4 \strokec4 ;\cb1 \
\cb3              \cf6 \strokec6 zone2hour\cf4 \strokec9 =\cf11 \strokec11 0\cf4 \strokec4 ;\cb1 \
\cb3              \cf6 \strokec6 zone3hour\cf4 \strokec9 =\cf11 \strokec11 0\cf4 \strokec4 ;\cb1 \
\cb3             \}\cb1 \
\cb3         \cf2 \strokec2 case\cf4 \strokec4  \cf11 \strokec11 2\cf4 \strokec4 :\cb1 \
\cb3             \{\cb1 \
\cb3                 \cf6 \strokec6 zone1hour\cf4 \strokec9 =\cf11 \strokec11 1\cf4 \strokec4 ;\cb1 \
\cb3                 \cf6 \strokec6 zone2hour\cf4 \strokec9 =\cf6 \strokec6 hours\cf4 \strokec9 %\cf11 \strokec11 8\cf4 \strokec4 ;\cb1 \
\cb3                 \cf6 \strokec6 zone3hour\cf4 \strokec9 =\cf11 \strokec11 0\cf4 \strokec4 ;\cb1 \
\cb3             \}\cb1 \
\cb3         \cf2 \strokec2 case\cf4 \strokec4  \cf11 \strokec11 3\cf4 \strokec4 :\cb1 \
\cb3             \{\cb1 \
\cb3                 \cf6 \strokec6 zone1hour\cf4 \strokec9 =\cf11 \strokec11 1\cf4 \strokec4 ;\cb1 \
\cb3                 \cf6 \strokec6 zone2hour\cf4 \strokec9 =\cf11 \strokec11 1\cf4 \strokec4 ;\cb1 \
\cb3                 \cf6 \strokec6 zone3hour\cf4 \strokec9 =\cf6 \strokec6 hours\cf4 \strokec9 %\cf11 \strokec11 8\cf4 \strokec4 ;\cb1 \
\cb3             \}\cb1 \
\cb3     \}   \cb1 \
\
\cb3 \}\cb1 \
\
\
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 loop\cf4 \strokec4 ()\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 date\cf4 \strokec4  \strokec9 =\strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf10 \strokec10 Date\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 hours\cf4 \strokec4  \strokec9 =\strokec4  \cf6 \strokec6 date\cf4 \strokec4 .\cf10 \strokec10 getHours\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 delta\cf4 \strokec4  \strokec9 =\strokec4  (\cf6 \strokec6 Date\cf4 \strokec4 .\cf10 \strokec10 now\cf4 \strokec4 () \strokec9 -\strokec4  \cf6 \strokec6 initialTime\cf4 \strokec4 );\cb1 \
\cb3     \cf6 \strokec6 timestamp\cf4 \strokec4 .\cf10 \strokec10 html\cf4 \strokec4 (\cf7 \strokec7 `\cf5 \strokec5 $\{\cf6 \strokec6 hours\cf5 \strokec5 \}\cf7 \strokec7 :\cf5 \strokec5 $\{\cf6 \strokec6 minutes\cf5 \strokec5 \}\cf7 \strokec7 :\cf5 \strokec5 $\{\cf6 \strokec6 seconds\cf5 \strokec5 \}\cf7 \strokec7  [Frame: \cf5 \strokec5 $\{\cf6 \strokec6 delta\cf5 \strokec5 \}\cf7 \strokec7 ]`\cf4 \strokec4 );\cb1 \
\cb3     \cb1 \
\cb3     \cf10 \strokec10 zones\cf4 \strokec4 (\cf6 \strokec6 hours\cf4 \strokec4 );\cb1 \
\cb3     \cb1 \
\
\cb3    \cf2 \strokec2 for\cf4 \strokec4  (\cf5 \strokec5 let\cf4 \strokec4  \cf6 \strokec6 i\cf4 \strokec4  \strokec9 =\strokec4  \cf11 \strokec11 0\cf4 \strokec4 ; \cf6 \strokec6 i\cf4 \strokec4  \strokec9 <\strokec4  \cf11 \strokec11 8\cf4 \strokec4 ; \cf6 \strokec6 i\cf4 \strokec9 ++\strokec4 )\cb1 \
\cb3     \{\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 angle\cf4 \strokec4  \strokec9 =\strokec4  (\cf6 \strokec6 Math\cf4 \strokec4 .\cf8 \strokec8 PI\cf4 \strokec4  \strokec9 /\strokec4  \cf11 \strokec11 4\cf4 \strokec4 ) \strokec9 *\strokec4  \cf6 \strokec6 i\cf4 \strokec4 ; \cf12 \strokec12 // Angle for each vertex\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 x\cf4 \strokec4  \strokec9 =\strokec4  \cf6 \strokec6 cx\cf4 \strokec4  \strokec9 +\strokec4  \cf6 \strokec6 radius\cf4 \strokec4  \strokec9 *\strokec4  \cf6 \strokec6 Math\cf4 \strokec4 .\cf10 \strokec10 cos\cf4 \strokec4 (\cf6 \strokec6 angle\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 y\cf4 \strokec4  \strokec9 =\strokec4  \cf6 \strokec6 cy\cf4 \strokec4  \strokec9 +\strokec4  \cf6 \strokec6 radius\cf4 \strokec4  \strokec9 *\strokec4  \cf6 \strokec6 Math\cf4 \strokec4 .\cf10 \strokec10 sin\cf4 \strokec4 (\cf6 \strokec6 angle\cf4 \strokec4 );\cb1 \
\cb3         \cf6 \strokec6 octpoints1\cf4 \strokec4 .\cf10 \strokec10 push\cf4 \strokec4 ([\cf6 \strokec6 x\cf4 \strokec4 , \cf6 \strokec6 y\cf4 \strokec4 ]);\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 x2\cf4 \strokec4  \strokec9 =\strokec4  \cf6 \strokec6 cx\cf4 \strokec4  \strokec9 +\strokec4  (\cf6 \strokec6 radius\cf4 \strokec9 *\cf11 \strokec11 2\cf4 \strokec4 ) \strokec9 *\strokec4  \cf6 \strokec6 Math\cf4 \strokec4 .\cf10 \strokec10 cos\cf4 \strokec4 (\cf6 \strokec6 angle\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 y2\cf4 \strokec4  \strokec9 =\strokec4  \cf6 \strokec6 cy\cf4 \strokec4  \strokec9 +\strokec4  (\cf6 \strokec6 radius\cf4 \strokec9 *\cf11 \strokec11 2\cf4 \strokec4 ) \strokec9 *\strokec4  \cf6 \strokec6 Math\cf4 \strokec4 .\cf10 \strokec10 sin\cf4 \strokec4 (\cf6 \strokec6 angle\cf4 \strokec4 );\cb1 \
\cb3         \cf6 \strokec6 octpoints2\cf4 \strokec4 .\cf10 \strokec10 push\cf4 \strokec4 ([\cf6 \strokec6 x2\cf4 \strokec4 , \cf6 \strokec6 y2\cf4 \strokec4 ]);\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 x3\cf4 \strokec4  \strokec9 =\strokec4  \cf6 \strokec6 cx\cf4 \strokec4  \strokec9 +\strokec4  (\cf6 \strokec6 radius\cf4 \strokec9 *\cf11 \strokec11 3\cf4 \strokec4 ) \strokec9 *\strokec4  \cf6 \strokec6 Math\cf4 \strokec4 .\cf10 \strokec10 cos\cf4 \strokec4 (\cf6 \strokec6 angle\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 y3\cf4 \strokec4  \strokec9 =\strokec4  \cf6 \strokec6 cy\cf4 \strokec4  \strokec9 +\strokec4  (\cf6 \strokec6 radius\cf4 \strokec9 *\cf11 \strokec11 3\cf4 \strokec4 ) \strokec9 *\strokec4  \cf6 \strokec6 Math\cf4 \strokec4 .\cf10 \strokec10 sin\cf4 \strokec4 (\cf6 \strokec6 angle\cf4 \strokec4 );\cb1 \
\cb3         \cf6 \strokec6 octpoints3\cf4 \strokec4 .\cf10 \strokec10 push\cf4 \strokec4 ([\cf6 \strokec6 x3\cf4 \strokec4 , \cf6 \strokec6 y3\cf4 \strokec4 ]);\cb1 \
\cb3     \}\cb1 \
\cb3    \cb1 \
\
\cb3     \cf12 \strokec12 //biggest hence first hence last in the drawing\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 oct3\cf4 \strokec9 =\strokec4  \cf6 \strokec6 svg\cf4 \strokec4 .\cf10 \strokec10 append\cf4 \strokec4 (\cf7 \strokec7 'path'\cf4 \strokec4 );\cb1 \
\cb3     \cf6 \strokec6 oct3\cf4 \cb1 \strokec4 \
\cb3     .\cf10 \strokec10 attr\cf4 \strokec4 (\cf7 \strokec7 'd'\cf4 \strokec4 , \cf7 \strokec7 `M\cf5 \strokec5 $\{\cf6 \strokec6 octpoints3\cf4 \strokec9 .\cf10 \strokec10 map\cf4 \strokec9 (\cf6 \strokec6 p\cf4 \strokec9  \cf5 \strokec5 =>\cf4 \strokec9  \cf6 \strokec6 p\cf4 \strokec9 .\cf10 \strokec10 join\cf4 \strokec9 (\cf7 \strokec7 ','\cf4 \strokec9 )).\cf10 \strokec10 join\cf4 \strokec9 (\cf7 \strokec7 'L'\cf4 \strokec9 )\cf5 \strokec5 \}\cf7 \strokec7 Z`\cf4 \strokec4 )\cb1 \
\cb3     .\cf10 \strokec10 attr\cf4 \strokec4 (\cf7 \strokec7 'fill'\cf4 \strokec4 , \cf7 \strokec7 `purple`\cf4 \strokec4 )\cb1 \
\cb3     .\cf10 \strokec10 attr\cf4 \strokec4 (\cf7 \strokec7 'opacity'\cf4 \strokec4 , \cf11 \strokec11 0.5\cf4 \strokec4 );\cb1 \
\cb3      \cb1 \
\cb3     \cf10 \strokec10 drawHours\cf4 \strokec4 (\cf6 \strokec6 zone1hour\cf4 \strokec4 , (\cf6 \strokec6 radius\cf4 \strokec9 *\cf11 \strokec11 3\cf4 \strokec4 ));\cb1 \
\
\
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 oct2\cf4 \strokec9 =\strokec4  \cf6 \strokec6 svg\cf4 \strokec4 .\cf10 \strokec10 append\cf4 \strokec4 (\cf7 \strokec7 'path'\cf4 \strokec4 );\cb1 \
\cb3     \cf6 \strokec6 oct2\cf4 \cb1 \strokec4 \
\cb3     .\cf10 \strokec10 attr\cf4 \strokec4 (\cf7 \strokec7 'd'\cf4 \strokec4 , \cf7 \strokec7 `M\cf5 \strokec5 $\{\cf6 \strokec6 octpoints2\cf4 \strokec9 .\cf10 \strokec10 map\cf4 \strokec9 (\cf6 \strokec6 p\cf4 \strokec9  \cf5 \strokec5 =>\cf4 \strokec9  \cf6 \strokec6 p\cf4 \strokec9 .\cf10 \strokec10 join\cf4 \strokec9 (\cf7 \strokec7 ','\cf4 \strokec9 )).\cf10 \strokec10 join\cf4 \strokec9 (\cf7 \strokec7 'L'\cf4 \strokec9 )\cf5 \strokec5 \}\cf7 \strokec7 Z`\cf4 \strokec4 )\cb1 \
\cb3     .\cf10 \strokec10 attr\cf4 \strokec4 (\cf7 \strokec7 'fill'\cf4 \strokec4 , \cf7 \strokec7 `teal`\cf4 \strokec4 )\cb1 \
\cb3     .\cf10 \strokec10 attr\cf4 \strokec4 (\cf7 \strokec7 'opacity'\cf4 \strokec4 , \cf11 \strokec11 0.5\cf4 \strokec4 );\cb1 \
\cb3         \cb1 \
\cb3     \cf10 \strokec10 drawHours\cf4 \strokec4 (\cf11 \strokec11 8\cf4 \strokec4 , (\cf6 \strokec6 radius\cf4 \strokec9 *\cf11 \strokec11 2\cf4 \strokec4 ));\cb1 \
\
\
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 oct1\cf4 \strokec9 =\strokec4  \cf6 \strokec6 svg\cf4 \strokec4 .\cf10 \strokec10 append\cf4 \strokec4 (\cf7 \strokec7 'path'\cf4 \strokec4 );\cb1 \
\cb3     \cf6 \strokec6 oct1\cf4 \cb1 \strokec4 \
\cb3     .\cf10 \strokec10 attr\cf4 \strokec4 (\cf7 \strokec7 'd'\cf4 \strokec4 , \cf7 \strokec7 `M\cf5 \strokec5 $\{\cf6 \strokec6 octpoints1\cf4 \strokec9 .\cf10 \strokec10 map\cf4 \strokec9 (\cf6 \strokec6 p\cf4 \strokec9  \cf5 \strokec5 =>\cf4 \strokec9  \cf6 \strokec6 p\cf4 \strokec9 .\cf10 \strokec10 join\cf4 \strokec9 (\cf7 \strokec7 ','\cf4 \strokec9 )).\cf10 \strokec10 join\cf4 \strokec9 (\cf7 \strokec7 'L'\cf4 \strokec9 )\cf5 \strokec5 \}\cf7 \strokec7 Z`\cf4 \strokec4 )\cb1 \
\cb3     .\cf10 \strokec10 attr\cf4 \strokec4 (\cf7 \strokec7 'fill'\cf4 \strokec4 , \cf7 \strokec7 'black'\cf4 \strokec4 )\cb1 \
\cb3     .\cf10 \strokec10 attr\cf4 \strokec4 (\cf7 \strokec7 'opacity'\cf4 \strokec4 , \cf11 \strokec11 0.5\cf4 \strokec4 );\cb1 \
\
\
\cb3     \cf10 \strokec10 drawHours\cf4 \strokec4 (\cf6 \strokec6 hour_normalised\cf4 \strokec4 , \cf6 \strokec6 radius\cf4 \strokec4  );\cb1 \
\
\
\cb3     \cf6 \strokec6 window\cf4 \strokec4 .\cf10 \strokec10 requestAnimationFrame\cf4 \strokec4 (\cf6 \strokec6 loop\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10 loop\cf4 \strokec4 ();\cb1 \
\
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 drawHours\cf4 \strokec4 (\cf6 \strokec6 hour_normalised\cf4 \strokec4 , \cf6 \strokec6 radius\cf4 \strokec4 )\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 \{\cb1 \
\
\cb3     \cf5 \strokec5 var\cf4 \strokec4  \cf6 \strokec6 angle\cf4 \strokec9 =\strokec4  \strokec9 -\cf6 \strokec6 Math\cf4 \strokec4 .\cf8 \strokec8 PI\cf4 \strokec9 /\cf11 \strokec11 2\cf4 \strokec4 ;\cb1 \
\cb3     \cf2 \strokec2 for\cf4 \strokec4 (\cf5 \strokec5 var\cf4 \strokec4  \cf6 \strokec6 i\cf4 \strokec9 =\cf11 \strokec11 0\cf4 \strokec4 ; \cf6 \strokec6 i\cf4 \strokec9 <=\cf6 \strokec6 hour_normalised\cf4 \strokec4 ; \cf6 \strokec6 i\cf4 \strokec9 ++\strokec4 )\cb1 \
\cb3     \{\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 x\cf4 \strokec4  \strokec9 =\strokec4  \cf6 \strokec6 cx\cf4 \strokec4  \strokec9 +\strokec4  \cf6 \strokec6 radius\cf4 \strokec4  \strokec9 *\strokec4  \cf6 \strokec6 Math\cf4 \strokec4 .\cf10 \strokec10 cos\cf4 \strokec4 (\cf6 \strokec6 angle\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf8 \strokec8 y\cf4 \strokec4  \strokec9 =\strokec4  \cf6 \strokec6 cy\cf4 \strokec4  \strokec9 +\strokec4  \cf6 \strokec6 radius\cf4 \strokec4  \strokec9 *\strokec4  \cf6 \strokec6 Math\cf4 \strokec4 .\cf10 \strokec10 sin\cf4 \strokec4 (\cf6 \strokec6 angle\cf4 \strokec4 );\cb1 \
\cb3         \cf6 \strokec6 angle\cf4 \strokec4  \strokec9 =\strokec4  \cf6 \strokec6 angle\cf4 \strokec9 +\strokec4 (\cf6 \strokec6 Math\cf4 \strokec4 .\cf8 \strokec8 PI\cf4 \strokec9 /\cf11 \strokec11 4\cf4 \strokec4 ); \cf12 \strokec12 // Angle for each vertex\cf4 \cb1 \strokec4 \
\cb3         \cf6 \strokec6 hourpoints\cf4 \strokec4 .\cf10 \strokec10 push\cf4 \strokec4 ([\cf6 \strokec6 x\cf4 \strokec4 , \cf6 \strokec6 y\cf4 \strokec4 ]);\cb1 \
\cb3     \}\cb1 \
\
\
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf6 \strokec6 point1\cf4 \strokec9 =\strokec4 [\cf6 \strokec6 cx\cf4 \strokec4  \strokec9 +\strokec4  \cf6 \strokec6 radius\cf4 \strokec4  \strokec9 *\strokec4  \cf6 \strokec6 Math\cf4 \strokec4 .\cf10 \strokec10 cos\cf4 \strokec4 (\strokec9 -\cf6 \strokec6 Math\cf4 \strokec4 .\cf8 \strokec8 PI\cf4 \strokec9 /\cf11 \strokec11 2\cf4 \strokec4 ), \cf6 \strokec6 cy\cf4 \strokec4  \strokec9 +\strokec4  \cf6 \strokec6 radius\cf4 \strokec4  \strokec9 *\strokec4  \cf6 \strokec6 Math\cf4 \strokec4 .\cf10 \strokec10 sin\cf4 \strokec4 (\strokec9 -\cf6 \strokec6 Math\cf4 \strokec4 .\cf8 \strokec8 PI\cf4 \strokec9 /\cf11 \strokec11 2\cf4 \strokec4 )];\cb1 \
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf6 \strokec6 point2\cf4 \strokec9 =\cf6 \strokec6 hourpoints\cf4 \strokec4 [\cf11 \strokec11 0\cf4 \strokec4 ];\cb1 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 for\cf4 \strokec4 (\cf5 \strokec5 var\cf4 \strokec4  \cf6 \strokec6 i\cf4 \strokec9 =\cf11 \strokec11 0\cf4 \strokec4 ; \cf6 \strokec6 i\cf4 \strokec9 <\strokec4 (\cf6 \strokec6 hour_normalised\cf4 \strokec9 +\cf11 \strokec11 2\cf4 \strokec4 ); \cf6 \strokec6 i\cf4 \strokec9 ++\strokec4 )\cb1 \
\cb3     \{\cb1 \
\cb3         \cf6 \strokec6 svg\cf4 \strokec4 .\cf10 \strokec10 append\cf4 \strokec4 (\cf7 \strokec7 'path'\cf4 \strokec4 )\cb1 \
\cb3        .\cf10 \strokec10 attr\cf4 \strokec4 (\cf7 \strokec7 'd'\cf4 \strokec4 , \cf7 \strokec7 `M\cf5 \strokec5 $\{\cf6 \strokec6 triangleCenter\cf4 \strokec9 .\cf10 \strokec10 join\cf4 \strokec9 (\cf7 \strokec7 ','\cf4 \strokec9 )\cf5 \strokec5 \}\cf7 \strokec7 L\cf5 \strokec5 $\{\cf6 \strokec6 point1\cf4 \strokec9 .\cf10 \strokec10 join\cf4 \strokec9 (\cf7 \strokec7 ','\cf4 \strokec9 )\cf5 \strokec5 \}\cf7 \strokec7 L\cf5 \strokec5 $\{\cf6 \strokec6 point2\cf4 \strokec9 .\cf10 \strokec10 join\cf4 \strokec9 (\cf7 \strokec7 ','\cf4 \strokec9 )\cf5 \strokec5 \}\cf7 \strokec7 Z`\cf4 \strokec4 )\cb1 \
\cb3        .\cf10 \strokec10 attr\cf4 \strokec4 (\cf7 \strokec7 'fill'\cf4 \strokec4 , \cf7 \strokec7 'white'\cf4 \strokec4 )\cb1 \
\cb3        .\cf10 \strokec10 attr\cf4 \strokec4 (\cf7 \strokec7 'opacity'\cf4 \strokec4 , \cf11 \strokec11 0.6\cf4 \strokec4 );    \cb1 \
\cb3         \cf6 \strokec6 point1\cf4 \strokec9 =\cf6 \strokec6 point2\cf4 \strokec4 ;\cb1 \
\cb3         \cf6 \strokec6 point2\cf4 \strokec9 =\cf6 \strokec6 hourpoints\cf4 \strokec4 [\cf6 \strokec6 i\cf4 \strokec4 ];\cb1 \
\cb3         \cb1 \
\cb3     \}\cb1 \
\
\cb3 \}\cb1 \
\
\
\
\pard\pardeftab720\partightenfactor0
\cf12 \cb3 \strokec12 // function drawOcts(radius, color)\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 // \{\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //     for (let i = 0; i < 8; i++)\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //         \{\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //             const angle = (Math.PI / 4) * i; // Angle for each vertex\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //             const x = cx + radius * Math.cos(angle);\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //             const y = cy + radius * Math.sin(angle);\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //             octpoints1.push([x, y]);\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //             // const x2 = cx + (radius*2) * Math.cos(angle);\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //             // const y2 = cy + (radius*2) * Math.sin(angle);\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //             // octpoints2.push([x2, y2]);\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //             // const x3 = cx + (radius*3) * Math.cos(angle);\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //             // const y3 = cy + (radius*3) * Math.sin(angle);\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //             // octpoints3.push([x3, y3]);\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //         \}\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //    // const oct1= svg.append('path');\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //     svg.append\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //     .attr('d', `M$\{octpoints1.map(p => p.join(',')).join('L')\}Z`)\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //     .attr('fill', color)\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //     .attr(opacity, '0.5');\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //     // const oct2= svg.append('path');\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //     // const oct3= svg.append('path');\cf4 \cb1 \strokec4 \
\
\cf12 \cb3 \strokec12 // \}\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf12 \strokec12 // // draw unfinished hour: \cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // // zone 1 minutes\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // //figure out how to make this the hour angle later\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3    \cb1 \
\cb3     \cf12 \strokec12 // for(var i=0; i<=min_normalised; i++)\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // \{\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3     \cf12 \strokec12 //     const x = cx + radius * Math.cos(angle);\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 //     const y = cy + radius * Math.sin(angle);\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 //     console.log("angle: "+angle);\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 //     angle = angle+(Math.PI/(60*4)); // Angle for each vertex: 60 parts of eact oct\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 //     minpoints.push([x, y]);\cf4 \cb1 \strokec4 \
\
\cb3     \cf12 \strokec12 //     //draw a circle at minpoints\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3     \cf12 \strokec12 //     // svg.append('circle')\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 //     //     .attr('x', minpoint[key][0])\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 //     //     .attr('y', minpoint[key][1])\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 //     //     .attr('r', 100)\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 //     //     .attr('fill', 'red')\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 //     //     .attr('opacity', '0.5'); \cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // \}\cf4 \cb1 \strokec4 \
\
\
\cb3     \cf12 \strokec12 // //finding the last point of the hour to start drawing the minutes on\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // point1=hourpoints[hourpoints.length-1];\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // point2=minpoints[0];\cf4 \cb1 \strokec4 \
\cb3    \cb1 \
\
\
\
\cb3     \cf12 \strokec12 // // for( var j=0; j<min_normalised+2; j++)\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // //     \{\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // //         //draw the triangle that divides the oct into 60 parts\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // //         console.log("point1:" +point1+" point2:"+point2);\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // //         svg.append('path')\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // //         .attr('d', `M$\{triangleCenter.join(',')\}L$\{point1.join(',')\}L$\{point2.join(',')\}Z`)\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // //         .attr('fill', 'yellow')\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // //         .attr('opacity', 1); \cf4 \cb1 \strokec4 \
\
\cb3     \cf12 \strokec12 // //         circle\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // //         .attr('cx', point1[0])\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // //         .attr('cy', point1[1])\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // //         .attr('r', 10)\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // //         .attr('fill', 'red'); \cf4 \cb1 \strokec4 \
\
\cb3     \cf12 \strokec12 // //          circle2\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // //         .attr('cx', point2[0])\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // //         .attr('cy', point2[1])\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // //         .attr('r', 10)\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // //         .attr('fill', 'blue'); \cf4 \cb1 \strokec4 \
\
\cb3     \cf12 \strokec12 // //         point1=point2;\cf4 \cb1 \strokec4 \
\cb3     \cf12 \strokec12 // //         point2=minpoints[j];\cf4 \cb1 \strokec4 \
\cb3             \cb1 \
\cb3     \cf12 \strokec12 // //     \}\cf4 \cb1 \strokec4 \
\
\
\cb3     \cf12 \strokec12 //we need 3 ocatgons- 1 for first 8 hours, one for next 8 hours, one for last 8 hours\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf12 \cb3 \strokec12 //first, one loop does the full hours. we want it to iterate starting from the first point, and draw the number of triangles=the number of full hours. \cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //so obv hours%8;\cf4 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 //add extra triangle for unfinished hour\cf4 \cb1 \strokec4 \
}